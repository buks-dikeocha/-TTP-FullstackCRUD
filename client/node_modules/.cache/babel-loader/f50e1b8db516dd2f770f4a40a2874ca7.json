{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chewb\\\\Desktop\\\\TTP-Assignment9\\\\client\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp(props) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordVerify, setPasswordVerify] = useState(\"\");\n  const redirect = useNavigate();\n\n  const userSignUp = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        username: username,\n        email: email,\n        password: password\n      };\n      let itt = await fetch(\"http://localhost:5000/signup\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (itt.status === 200 && passw) {\n        redirect(\"/you\");\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => userSignUp(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        placeholder: \"username\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        placeholder: \"email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: passwordVerify,\n        placeholder: \"one more time\",\n        onChange: e => {\n          setPasswordVerify(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must include:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least eight characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one lowercase letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one uppercase letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one special character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"vl9mvXq0sIT7mNBoXTF5NuoD9Fc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/chewb/Desktop/TTP-Assignment9/client/src/components/SignUp.js"],"names":["React","useState","useNavigate","SignUp","props","username","setUsername","email","setEmail","password","setPassword","passwordVerify","setPasswordVerify","redirect","userSignUp","e","preventDefault","body","itt","fetch","method","headers","JSON","stringify","status","passw","error","console","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SignUp(props) {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordVerify, setPasswordVerify] = useState(\"\")\r\n\r\n    const redirect = useNavigate()\r\n\r\n    const userSignUp = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = {\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            }\r\n\r\n            let itt = await fetch(\"http://localhost:5000/signup\", {\r\n                method: \"post\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            if (itt.status === 200 && passw) {\r\n                redirect(\"/you\")\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => userSignUp(e)}>\r\n                <input type=\"text\" value={username} placeholder=\"username\" onChange={(e) => {\r\n                    setUsername(e.target.value)\r\n                }}></input>\r\n            \r\n                <input type=\"email\" value={email} placeholder=\"email\" onChange={(e) => {\r\n                    setEmail(e.target.value)\r\n                }}></input>\r\n            \r\n                <input type=\"password\" value={password} placeholder=\"password\" onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                }}></input>\r\n\r\n                <input type=\"password\" value={passwordVerify} placeholder=\"one more time\" onChange={(e) => {\r\n                    setPasswordVerify(e.target.value)\r\n                }}></input>\r\n                <button>Sign up</button>\r\n            </form>\r\n            <div>\r\n                <p>Password must include:</p>\r\n                <p>At least eight characters</p>\r\n                <p>At least one lowercase letter</p>\r\n                <p>At least one uppercase letter</p>\r\n                <p>At least one number</p>\r\n                <p>At least one special character</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}