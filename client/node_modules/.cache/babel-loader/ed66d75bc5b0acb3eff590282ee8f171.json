{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chewb\\\\Desktop\\\\TTP-Assignment9\\\\client\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp(props) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordVerify, setPasswordVerify] = useState(\"\");\n  const redirect = useNavigate();\n\n  const userSignUp = async e => {\n    e.preventDefault();\n\n    if (password === passwordVerify) {\n      try {\n        const body = {\n          username: username,\n          email: email,\n          password: password\n        };\n        let itt = await fetch(\"http://localhost:5000/signup\", {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n\n        if (itt.status === 200) {\n          redirect(\"/you\");\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => userSignUp(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        placeholder: \"username\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        placeholder: \"email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        placeholder: \"password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: passwordVerify,\n        placeholder: \"one more time\",\n        onChange: e => {\n          setPasswordVerify(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must include:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least eight characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one lowercase letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one uppercase letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At least one special character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"vl9mvXq0sIT7mNBoXTF5NuoD9Fc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/chewb/Desktop/TTP-Assignment9/client/src/components/SignUp.js"],"names":["React","useState","useNavigate","SignUp","props","username","setUsername","email","setEmail","password","setPassword","passwordVerify","setPasswordVerify","redirect","userSignUp","e","preventDefault","body","itt","fetch","method","headers","JSON","stringify","status","error","console","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SignUp(props) {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordVerify, setPasswordVerify] = useState(\"\")\r\n\r\n    const redirect = useNavigate()\r\n\r\n    const userSignUp = async (e) => {\r\n        e.preventDefault()\r\n        if (password === passwordVerify) {\r\n            try {\r\n                const body = {\r\n                    username: username,\r\n                    email: email,\r\n                    password: password\r\n                }\r\n\r\n                let itt = await fetch(\"http://localhost:5000/signup\", {\r\n                    method: \"post\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                })\r\n\r\n                if (itt.status === 200) {\r\n                    redirect(\"/you\")\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.error(error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => userSignUp(e)}>\r\n                <input type=\"text\" value={username} placeholder=\"username\" onChange={(e) => {\r\n                    setUsername(e.target.value)\r\n                }}></input>\r\n            \r\n                <input type=\"email\" value={email} placeholder=\"email\" onChange={(e) => {\r\n                    setEmail(e.target.value)\r\n                }}></input>\r\n            \r\n                <input type=\"text\" value={password} placeholder=\"password\" onChange={(e) => {\r\n                    setPassword(e.target.value)\r\n                }}></input>\r\n\r\n                <input type=\"text\" value={passwordVerify} placeholder=\"one more time\" onChange={(e) => {\r\n                    setPasswordVerify(e.target.value)\r\n                }}></input>\r\n                <button>Sign up</button>\r\n            </form>\r\n            <div>\r\n                <p>Password must include:</p>\r\n                <p>At least eight characters</p>\r\n                <p>At least one lowercase letter</p>\r\n                <p>At least one uppercase letter</p>\r\n                <p>At least one number</p>\r\n                <p>At least one special character</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}